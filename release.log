./release.sh: line 320: getopts_long: command not found
./release.sh: line 381: echo_error: command not found
.dbFlow/release.sh - creates a release artifact for targetbranch and place it into depot

This script will help you to create a release in no time. You only have to specify the target branch. 
The source branch will be the current one or the one you selected by option. 
If you specify the -b / --build flag, the target branch is cloned into it and the initial release 
of the predecessor, as well as the patch of the current and the initial of the current release are built.

Usage:
  ./release.sh --source <branch> --target <branch> --version <label> [--build]

Options:
  -h | --help             - Show this screen
  -d | --debug            - Show additionaly output messages
  -s | --source <branch>  - Optional Source branch (default current)to merge target branch into and determine the files to include in patch
  -t | --target <branch>  - Required Target branch to reflect the predecessor of the source branch
  -g | --gate             - Optional Gate branch to free source branch. If this is set, then the source branch will be merged into that
  -v | --version <label>  - Required label of version this artifact represents (optional when buildflag is submitted)
                          - Set <label> to major, minor or patch and the next semantic version is calculated automatically

  -b | --build            - Optional buildflag to create 3 artifact for using as nighlybuilds
  -a | --apply <folder>   - Optional path to apply the build(s) when buildflag is set
  -k | --keep             - Optional flag to keep folders in depot path (will be passed to build.sh)
  -f | --forceddl         - Optional flag to switch off checking for new table-file through git itself.
                            This will run table_ddl scripts when matching table is present in patch mode

Examples:
  ./release.sh --target release --version 1.2.3
  ./release.sh --source release --target test --version 1.2.3
  ./release.sh --source develop --target master -b
  ./release.sh --source develop --gate release --target test --version 2.0.3 --apply ../instances/test
‚ùå EXIT 1
